name: Deploy EKS Infrastructure 

on:
  workflow_dispatch:
 
env:
 TF_LOG: INFO
 AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
 AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
 AWS_REGION: ${{ secrets.AWS_REGION }}
 BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE}}
 ECR_REGISTRY: ${{ secrets.ECR_REGISTRY }}
 DEPLOYMENT_ROLE: ${{ secrets.DEPLOYMENT_ROLE }}

permissions:
  id-token: write
  contents: read

jobs:
  AssumeRoleAndCallIdentity:
    runs-on: ubuntu-latest
    steps: 
      - name: Git clone the repository
        uses: actions/checkout@v3
      - name: configure aws Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_OIDC_ROLE }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ env.DEPLOYMENT_ROLE }}

  terraform:
    name: "Terraform Infrastructure Change Management"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform

    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/github_actions_omr_engine_role
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: TF init
        shell: bash
        run: |
          terraform init \
            -backend-config="bucket=$TF_BACKEND_BUCKET" \
            -backend-config="region=$AWS_REGION" \
            -upgrade \
            -reconfigure
        working-directory: terraform

      - name: Terraform format
        id: fmt
        run: terraform fmt -check

      - name: Create ECR repo [TF apply]
        shell: bash
        run: |
          set -eux
          terraform apply \
            -var "ecr_repo_name=$ECR_REPO_NAME" \
            -var "aws_region=$AWS_REGION" \
            -var "aws_acc_id=$AWS_ACCOUNT_ID" \
            -auto-approve
        working-directory: terraform
      - name:  Configure Kubectl
        shell: bash
        run: aws eks --region ${{ env.AWS_REGION }} update-kubeconfig \
          --name $(terraform ouput -raw cluster name)